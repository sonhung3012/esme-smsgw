package com.fis.esme.smslog;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2014-03-31T11:17:42.767+07:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://smslog.esme.fis.com/", name = "EsmeSmsLogTransferer")
@XmlSeeAlso({ObjectFactory.class})
public interface EsmeSmsLogTransferer {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkConstraints", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.CheckConstraints")
    @WebMethod
    @ResponseWrapper(localName = "checkConstraintsResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.CheckConstraintsResponse")
    public boolean checkConstraints(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Long arg0
    );

    @RequestWrapper(localName = "delete", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.Delete")
    @WebMethod
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.DeleteResponse")
    public void delete(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg0
    ) throws Exception_Exception;

    @RequestWrapper(localName = "update", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.Update")
    @WebMethod
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.UpdateResponse")
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.Count")
    @WebMethod
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.CountResponse")
    public int count(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubSearchDetail arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkExisted", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.CheckExisted")
    @WebMethod
    @ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.CheckExistedResponse")
    public int checkExisted(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.FindAll")
    @WebMethod
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.FindAllResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsLog> findAll(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubSearchDetail arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        boolean arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        int arg5,
        @WebParam(name = "arg6", targetNamespace = "")
        boolean arg6
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getServiceActive", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.GetServiceActive")
    @WebMethod
    @ResponseWrapper(localName = "getServiceActiveResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.GetServiceActiveResponse")
    public java.util.List<com.fis.esme.persistence.EsmeServices> getServiceActive() throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.Add")
    @WebMethod
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.AddResponse")
    public java.lang.Long add(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getCommandActive", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.GetCommandActive")
    @WebMethod
    @ResponseWrapper(localName = "getCommandActiveResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.GetCommandActiveResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsCommand> getCommandActive() throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllNoPaper", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.FindAllNoPaper")
    @WebMethod
    @ResponseWrapper(localName = "findAllNoPaperResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.FindAllNoPaperResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsLog> findAllNoPaper(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubSearchDetail arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsLog arg1
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "reportInfo", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.ReportInfo")
    @WebMethod
    @ResponseWrapper(localName = "reportInfoResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.ReportInfoResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsLog> reportInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        javax.xml.datatype.XMLGregorianCalendar arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        java.lang.String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        java.lang.String arg4
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "lookUpInfo", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.LookUpInfo")
    @WebMethod
    @ResponseWrapper(localName = "lookUpInfoResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.LookUpInfoResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsLog> lookUpInfo(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.util.Date arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.util.Date arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        java.lang.String arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        java.lang.String arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        java.lang.String arg5
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getShortCodeActive", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.GetShortCodeActive")
    @WebMethod
    @ResponseWrapper(localName = "getShortCodeActiveResponse", targetNamespace = "http://smslog.esme.fis.com/", className = "com.fis.esme.smslog.GetShortCodeActiveResponse")
    public java.util.List<com.fis.esme.persistence.EsmeShortCode> getShortCodeActive() throws Exception_Exception;
}

package com.fis.esme.subgroups;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2014-10-10T09:22:20.486+07:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://subgroups.esme.fis.com/", name = "SubGroupsTransferer")
@XmlSeeAlso({ObjectFactory.class})
public interface SubGroupsTransferer {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.Add")
    @WebMethod
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.AddResponse")
    public java.lang.Long add(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubGroup arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.Count")
    @WebMethod
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.CountResponse")
    public int count(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubGroup arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        boolean arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkExisted", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.CheckExisted")
    @WebMethod
    @ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.CheckExistedResponse")
    public int checkExisted(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubGroup arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllWithOrderPaging", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.FindAllWithOrderPaging")
    @WebMethod
    @ResponseWrapper(localName = "findAllWithOrderPagingResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.FindAllWithOrderPagingResponse")
    public java.util.List<com.fis.esme.persistence.SubGroup> findAllWithOrderPaging(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubGroup arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        boolean arg5
    ) throws Exception_Exception;

    @RequestWrapper(localName = "delete", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.Delete")
    @WebMethod
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.DeleteResponse")
    public void delete(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubGroup arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkConstraints", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.CheckConstraints")
    @WebMethod
    @ResponseWrapper(localName = "checkConstraintsResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.CheckConstraintsResponse")
    public boolean checkConstraints(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Long arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllWithoutParameter", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.FindAllWithoutParameter")
    @WebMethod
    @ResponseWrapper(localName = "findAllWithoutParameterResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.FindAllWithoutParameterResponse")
    public java.util.List<com.fis.esme.persistence.SubGroup> findAllWithoutParameter() throws Exception_Exception;

    @RequestWrapper(localName = "update", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.Update")
    @WebMethod
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://subgroups.esme.fis.com/", className = "com.fis.esme.subgroups.UpdateResponse")
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.SubGroup arg0
    ) throws Exception_Exception;
}

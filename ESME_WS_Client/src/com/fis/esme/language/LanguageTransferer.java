package com.fis.esme.language;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2013-11-28T15:06:43.044+07:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://language.esme.fis.com/", name = "languageTransferer")
@XmlSeeAlso({ObjectFactory.class})
public interface LanguageTransferer {

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "countAll", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CountAll")
    @WebMethod
    @ResponseWrapper(localName = "countAllResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CountAllResponse")
    public int countAll();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getLanguageStatus", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.GetLanguageStatus")
    @WebMethod
    @ResponseWrapper(localName = "getLanguageStatusResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.GetLanguageStatusResponse")
    public java.util.List<com.fis.esme.persistence.EsmeLanguage> getLanguageStatus();

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkConstraints", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CheckConstraints")
    @WebMethod
    @ResponseWrapper(localName = "checkConstraintsResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CheckConstraintsResponse")
    public boolean checkConstraints(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Long arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllWithOrderPaging", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.FindAllWithOrderPaging")
    @WebMethod
    @ResponseWrapper(localName = "findAllWithOrderPagingResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.FindAllWithOrderPagingResponse")
    public java.util.List<com.fis.esme.persistence.EsmeLanguage> findAllWithOrderPaging(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        boolean arg5
    ) throws Exception_Exception;

    @RequestWrapper(localName = "updateAllLanguage", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.UpdateAllLanguage")
    @WebMethod
    @ResponseWrapper(localName = "updateAllLanguageResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.UpdateAllLanguageResponse")
    public void updateAllLanguage(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        java.lang.String arg2
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.Count")
    @WebMethod
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CountResponse")
    public int count(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        boolean arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAll", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.FindAll")
    @WebMethod
    @ResponseWrapper(localName = "findAllResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.FindAllResponse")
    public java.util.List<com.fis.esme.persistence.EsmeLanguage> findAll() throws Exception_Exception;

    @RequestWrapper(localName = "edit", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.Edit")
    @WebMethod
    @ResponseWrapper(localName = "editResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.EditResponse")
    public void edit(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.Add")
    @WebMethod
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.AddResponse")
    public long add(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkExisted", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CheckExisted")
    @WebMethod
    @ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.CheckExistedResponse")
    public int checkExisted(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllWithoutParameter", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.FindAllWithoutParameter")
    @WebMethod
    @ResponseWrapper(localName = "findAllWithoutParameterResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.FindAllWithoutParameterResponse")
    public java.util.List<com.fis.esme.persistence.EsmeLanguage> findAllWithoutParameter() throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "getDefaultLanguage", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.GetDefaultLanguage")
    @WebMethod
    @ResponseWrapper(localName = "getDefaultLanguageResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.GetDefaultLanguageResponse")
    public com.fis.esme.persistence.EsmeLanguage getDefaultLanguage() throws Exception_Exception;

    @RequestWrapper(localName = "delete", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.Delete")
    @WebMethod
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.DeleteResponse")
    public void delete(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeLanguage arg0
    ) throws Exception_Exception;

    @RequestWrapper(localName = "deleteAll", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.DeleteAll")
    @WebMethod
    @ResponseWrapper(localName = "deleteAllResponse", targetNamespace = "http://language.esme.fis.com/", className = "com.fis.esme.language.DeleteAllResponse")
    public void deleteAll() throws Exception_Exception;
}

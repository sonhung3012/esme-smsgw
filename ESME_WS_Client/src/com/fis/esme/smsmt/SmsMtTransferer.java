package com.fis.esme.smsmt;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2014-03-05T14:27:27.402+07:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://smsmt.esme.fis.com/", name = "SmsMtTransferer")
@XmlSeeAlso({ObjectFactory.class})
public interface SmsMtTransferer {

    @RequestWrapper(localName = "deleteByFileUploadId", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.DeleteByFileUploadId")
    @WebMethod
    @ResponseWrapper(localName = "deleteByFileUploadIdResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.DeleteByFileUploadIdResponse")
    public void deleteByFileUploadId(
        @WebParam(name = "arg0", targetNamespace = "")
        long arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "addMultiProcess", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.AddMultiProcess")
    @WebMethod
    @ResponseWrapper(localName = "addMultiProcessResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.AddMultiProcessResponse")
    public long addMultiProcess(
        @WebParam(name = "arg0", targetNamespace = "")
        java.util.List<com.fis.esme.persistence.EsmeSmsMt> arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "add", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.Add")
    @WebMethod
    @ResponseWrapper(localName = "addResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.AddResponse")
    public java.lang.Long add(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsMt arg0
    ) throws Exception_Exception;

    @RequestWrapper(localName = "stopUpload", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.StopUpload")
    @WebMethod
    @ResponseWrapper(localName = "stopUploadResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.StopUploadResponse")
    public void stopUpload() throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "count", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.Count")
    @WebMethod
    @ResponseWrapper(localName = "countResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.CountResponse")
    public int count(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsMt arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        boolean arg1
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "FindBySmsRouting", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindBySmsRouting")
    @WebMethod(operationName = "FindBySmsRouting")
    @ResponseWrapper(localName = "FindBySmsRoutingResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindBySmsRoutingResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsRouting> findBySmsRouting(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsRouting arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkExisted", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.CheckExisted")
    @WebMethod
    @ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.CheckExistedResponse")
    public int checkExisted(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsMt arg0
    );

    @RequestWrapper(localName = "delete", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.Delete")
    @WebMethod
    @ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.DeleteResponse")
    public void delete(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsMt arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findByCommand", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindByCommand")
    @WebMethod
    @ResponseWrapper(localName = "findByCommandResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindByCommandResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsCommand> findByCommand(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllWithoutParameter", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindAllWithoutParameter")
    @WebMethod
    @ResponseWrapper(localName = "findAllWithoutParameterResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindAllWithoutParameterResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsMt> findAllWithoutParameter() throws Exception_Exception;

    @RequestWrapper(localName = "update", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.Update")
    @WebMethod
    @ResponseWrapper(localName = "updateResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.UpdateResponse")
    public void update(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsMt arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findAllWithOrderPaging", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindAllWithOrderPaging")
    @WebMethod
    @ResponseWrapper(localName = "findAllWithOrderPagingResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindAllWithOrderPagingResponse")
    public java.util.List<com.fis.esme.persistence.EsmeSmsMt> findAllWithOrderPaging(
        @WebParam(name = "arg0", targetNamespace = "")
        com.fis.esme.persistence.EsmeSmsMt arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        java.lang.String arg1,
        @WebParam(name = "arg2", targetNamespace = "")
        boolean arg2,
        @WebParam(name = "arg3", targetNamespace = "")
        int arg3,
        @WebParam(name = "arg4", targetNamespace = "")
        int arg4,
        @WebParam(name = "arg5", targetNamespace = "")
        boolean arg5
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "checkConstraints", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.CheckConstraints")
    @WebMethod
    @ResponseWrapper(localName = "checkConstraintsResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.CheckConstraintsResponse")
    public boolean checkConstraints(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.Long arg0
    );

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findByShortCode", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindByShortCode")
    @WebMethod
    @ResponseWrapper(localName = "findByShortCodeResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindByShortCodeResponse")
    public java.util.List<com.fis.esme.persistence.EsmeShortCode> findByShortCode(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws Exception_Exception;

    @WebResult(name = "return", targetNamespace = "")
    @RequestWrapper(localName = "findByCP", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindByCP")
    @WebMethod
    @ResponseWrapper(localName = "findByCPResponse", targetNamespace = "http://smsmt.esme.fis.com/", className = "com.fis.esme.smsmt.FindByCPResponse")
    public java.util.List<com.fis.esme.persistence.EsmeCp> findByCP(
        @WebParam(name = "arg0", targetNamespace = "")
        java.lang.String arg0
    ) throws Exception_Exception;
}


package com.fis.esme.scheduler;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2014-10-02T10:51:47.888+07:00
 * Generated source version: 2.4.1
 * 
 */
public final class SchedulerTransferer_SchedulerTransfererPort_Client {

    private static final QName SERVICE_NAME = new QName("http://scheduler.esme.fis.com/", "SchedulerTransfererService");

    private SchedulerTransferer_SchedulerTransfererPort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = SchedulerTransfererService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) { 
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }
      
        SchedulerTransfererService ss = new SchedulerTransfererService(wsdlURL, SERVICE_NAME);
        SchedulerTransferer port = ss.getSchedulerTransfererPort();  
        
        {
        System.out.println("Invoking checkExisted...");
        com.fis.esme.persistence.EsmeScheduler _checkExisted_arg0 = new com.fis.esme.persistence.EsmeScheduler();
        _checkExisted_arg0.setDescription("Description539971755");
        _checkExisted_arg0.setName("Name-719581221");
        _checkExisted_arg0.setSchedulerId(8586366040340246155l);
        _checkExisted_arg0.setSchedulerStatus("SchedulerStatus-1612923486");
        _checkExisted_arg0.setStatus("Status1712586540");
        _checkExisted_arg0.setTime("Time92928653");
        _checkExisted_arg0.setType("Type-394439002");
        int _checkExisted__return = port.checkExisted(_checkExisted_arg0);
        System.out.println("checkExisted.result=" + _checkExisted__return);


        }
        {
        System.out.println("Invoking count...");
        com.fis.esme.persistence.EsmeScheduler _count_arg0 = new com.fis.esme.persistence.EsmeScheduler();
        _count_arg0.setDescription("Description-2099499258");
        _count_arg0.setName("Name-59699398");
        _count_arg0.setSchedulerId(516605723612750620l);
        _count_arg0.setSchedulerStatus("SchedulerStatus275018957");
        _count_arg0.setStatus("Status-306858763");
        _count_arg0.setTime("Time1098083504");
        _count_arg0.setType("Type1825797028");
        boolean _count_arg1 = false;
        int _count__return = port.count(_count_arg0, _count_arg1);
        System.out.println("count.result=" + _count__return);


        }
        {
        System.out.println("Invoking update...");
        com.fis.esme.persistence.EsmeScheduler _update_arg0 = new com.fis.esme.persistence.EsmeScheduler();
        _update_arg0.setDescription("Description-1336653575");
        _update_arg0.setName("Name-890601855");
        _update_arg0.setSchedulerId(-7191070726388424343l);
        _update_arg0.setSchedulerStatus("SchedulerStatus-181637137");
        _update_arg0.setStatus("Status-2053502057");
        _update_arg0.setTime("Time1426062694");
        _update_arg0.setType("Type-1613110830");
        try {
            port.update(_update_arg0);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking findAllWithoutParameter...");
        try {
            java.util.List<com.fis.esme.persistence.EsmeScheduler> _findAllWithoutParameter__return = port.findAllWithoutParameter();
            System.out.println("findAllWithoutParameter.result=" + _findAllWithoutParameter__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking delete...");
        com.fis.esme.persistence.EsmeScheduler _delete_arg0 = new com.fis.esme.persistence.EsmeScheduler();
        _delete_arg0.setDescription("Description1338778931");
        _delete_arg0.setName("Name964534094");
        _delete_arg0.setSchedulerId(-2742117130546094483l);
        _delete_arg0.setSchedulerStatus("SchedulerStatus-1780200521");
        _delete_arg0.setStatus("Status1031888253");
        _delete_arg0.setTime("Time1752850484");
        _delete_arg0.setType("Type1037002451");
        try {
            port.delete(_delete_arg0);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking add...");
        com.fis.esme.persistence.EsmeScheduler _add_arg0 = new com.fis.esme.persistence.EsmeScheduler();
        _add_arg0.setDescription("Description1526393126");
        _add_arg0.setName("Name12028102");
        _add_arg0.setSchedulerId(7541147856792662343l);
        _add_arg0.setSchedulerStatus("SchedulerStatus828600140");
        _add_arg0.setStatus("Status640653870");
        _add_arg0.setTime("Time-1688560547");
        _add_arg0.setType("Type-1976627597");
        try {
            java.lang.Long _add__return = port.add(_add_arg0);
            System.out.println("add.result=" + _add__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }
        {
        System.out.println("Invoking checkConstraints...");
        java.lang.Long _checkConstraints_arg0 = Long.valueOf(3974347180058000879l);
        boolean _checkConstraints__return = port.checkConstraints(_checkConstraints_arg0);
        System.out.println("checkConstraints.result=" + _checkConstraints__return);


        }
        {
        System.out.println("Invoking findAllWithOrderPaging...");
        com.fis.esme.persistence.EsmeScheduler _findAllWithOrderPaging_arg0 = new com.fis.esme.persistence.EsmeScheduler();
        _findAllWithOrderPaging_arg0.setDescription("Description-1389703084");
        _findAllWithOrderPaging_arg0.setName("Name805037143");
        _findAllWithOrderPaging_arg0.setSchedulerId(7138932814727268748l);
        _findAllWithOrderPaging_arg0.setSchedulerStatus("SchedulerStatus1055802033");
        _findAllWithOrderPaging_arg0.setStatus("Status1302652030");
        _findAllWithOrderPaging_arg0.setTime("Time-1648942621");
        _findAllWithOrderPaging_arg0.setType("Type1059454758");
        java.lang.String _findAllWithOrderPaging_arg1 = "_findAllWithOrderPaging_arg11345427120";
        boolean _findAllWithOrderPaging_arg2 = false;
        int _findAllWithOrderPaging_arg3 = -228710958;
        int _findAllWithOrderPaging_arg4 = 1052455438;
        boolean _findAllWithOrderPaging_arg5 = true;
        try {
            java.util.List<com.fis.esme.persistence.EsmeScheduler> _findAllWithOrderPaging__return = port.findAllWithOrderPaging(_findAllWithOrderPaging_arg0, _findAllWithOrderPaging_arg1, _findAllWithOrderPaging_arg2, _findAllWithOrderPaging_arg3, _findAllWithOrderPaging_arg4, _findAllWithOrderPaging_arg5);
            System.out.println("findAllWithOrderPaging.result=" + _findAllWithOrderPaging__return);

        } catch (Exception_Exception e) { 
            System.out.println("Expected exception: Exception has occurred.");
            System.out.println(e.toString());
        }
            }

        System.exit(0);
    }

}

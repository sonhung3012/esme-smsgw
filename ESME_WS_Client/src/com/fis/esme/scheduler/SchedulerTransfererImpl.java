
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package com.fis.esme.scheduler;

import java.util.logging.Logger;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2014-10-02T10:51:48.060+07:00
 * Generated source version: 2.4.1
 * 
 */

@javax.jws.WebService(
                      serviceName = "SchedulerTransfererService",
                      portName = "SchedulerTransfererPort",
                      targetNamespace = "http://scheduler.esme.fis.com/",
                      wsdlLocation = "http://localhost:7080/ESME_Business/services/SchedulerTransfererPort?wsdl",
                      endpointInterface = "com.fis.esme.scheduler.SchedulerTransferer")
                      
public class SchedulerTransfererImpl implements SchedulerTransferer {

    private static final Logger LOG = Logger.getLogger(SchedulerTransfererImpl.class.getName());

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#checkExisted(com.fis.esme.scheduler.EsmeScheduler  arg0 )*
     */
    public int checkExisted(com.fis.esme.persistence.EsmeScheduler arg0) { 
        LOG.info("Executing operation checkExisted");
        System.out.println(arg0);
        try {
            int _return = -816158863;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#count(com.fis.esme.scheduler.EsmeScheduler  arg0 ,)boolean  arg1 )*
     */
    public int count(com.fis.esme.persistence.EsmeScheduler arg0,boolean arg1) { 
        LOG.info("Executing operation count");
        System.out.println(arg0);
        System.out.println(arg1);
        try {
            int _return = -1368045731;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#update(com.fis.esme.scheduler.EsmeScheduler  arg0 )*
     */
    public void update(com.fis.esme.persistence.EsmeScheduler arg0) throws Exception_Exception    { 
        LOG.info("Executing operation update");
        System.out.println(arg0);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new Exception_Exception("Exception...");
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#findAllWithoutParameter(*
     */
    public java.util.List<com.fis.esme.persistence.EsmeScheduler> findAllWithoutParameter() throws Exception_Exception    { 
        LOG.info("Executing operation findAllWithoutParameter");
        try {
            java.util.List<com.fis.esme.persistence.EsmeScheduler> _return = new java.util.ArrayList<com.fis.esme.persistence.EsmeScheduler>();
            com.fis.esme.persistence.EsmeScheduler _returnVal1 = new com.fis.esme.persistence.EsmeScheduler();
            _returnVal1.setDescription("Description-389078885");
            _returnVal1.setName("Name-738361568");
            _returnVal1.setSchedulerId(-287882519742653384l);
            _returnVal1.setSchedulerStatus("SchedulerStatus237311804");
            _returnVal1.setStatus("Status-840483149");
            _returnVal1.setTime("Time-286872833");
            _returnVal1.setType("Type-2016180495");
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new Exception_Exception("Exception...");
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#delete(com.fis.esme.scheduler.EsmeScheduler  arg0 )*
     */
    public void delete(com.fis.esme.persistence.EsmeScheduler arg0) throws Exception_Exception    { 
        LOG.info("Executing operation delete");
        System.out.println(arg0);
        try {
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new Exception_Exception("Exception...");
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#add(com.fis.esme.scheduler.EsmeScheduler  arg0 )*
     */
    public java.lang.Long add(com.fis.esme.persistence.EsmeScheduler arg0) throws Exception_Exception    { 
        LOG.info("Executing operation add");
        System.out.println(arg0);
        try {
            java.lang.Long _return = Long.valueOf(-7088049195251238544l);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new Exception_Exception("Exception...");
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#checkConstraints(java.lang.Long  arg0 )*
     */
    public boolean checkConstraints(java.lang.Long arg0) { 
        LOG.info("Executing operation checkConstraints");
        System.out.println(arg0);
        try {
            boolean _return = true;
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see com.fis.esme.scheduler.SchedulerTransferer#findAllWithOrderPaging(com.fis.esme.scheduler.EsmeScheduler  arg0 ,)java.lang.String  arg1 ,)boolean  arg2 ,)int  arg3 ,)int  arg4 ,)boolean  arg5 )*
     */
    public java.util.List<com.fis.esme.persistence.EsmeScheduler> findAllWithOrderPaging(com.fis.esme.persistence.EsmeScheduler arg0,java.lang.String arg1,boolean arg2,int arg3,int arg4,boolean arg5) throws Exception_Exception    { 
        LOG.info("Executing operation findAllWithOrderPaging");
        System.out.println(arg0);
        System.out.println(arg1);
        System.out.println(arg2);
        System.out.println(arg3);
        System.out.println(arg4);
        System.out.println(arg5);
        try {
            java.util.List<com.fis.esme.persistence.EsmeScheduler> _return = new java.util.ArrayList<com.fis.esme.persistence.EsmeScheduler>();
            com.fis.esme.persistence.EsmeScheduler _returnVal1 = new com.fis.esme.persistence.EsmeScheduler();
            _returnVal1.setDescription("Description85000788");
            _returnVal1.setName("Name361482292");
            _returnVal1.setSchedulerId(479432248977803918l);
            _returnVal1.setSchedulerStatus("SchedulerStatus972799760");
            _returnVal1.setStatus("Status-2042433763");
            _returnVal1.setTime("Time-1660078161");
            _returnVal1.setType("Type85703580");
            _return.add(_returnVal1);
            return _return;
        } catch (java.lang.Exception ex) {
            ex.printStackTrace();
            throw new RuntimeException(ex);
        }
        //throw new Exception_Exception("Exception...");
    }

}

package com.fis.esme.scheduler;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1 2014-11-15T19:08:21.922+07:00 Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://scheduler.esme.fis.com/", name = "SchedulerTransferer")
@XmlSeeAlso({ ObjectFactory.class })
public interface SchedulerTransferer {

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "checkExisted", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.CheckExisted")
	@WebMethod
	@ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.CheckExistedResponse")
	public int checkExisted(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeScheduler arg0);

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "count", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.Count")
	@WebMethod
	@ResponseWrapper(localName = "countResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.CountResponse")
	public int count(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeScheduler arg0, @WebParam(name = "arg1", targetNamespace = "") boolean arg1);

	@RequestWrapper(localName = "update", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.Update")
	@WebMethod
	@ResponseWrapper(localName = "updateResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.UpdateResponse")
	public void update(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeScheduler arg0) throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findAllWithoutParameter", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.FindAllWithoutParameter")
	@WebMethod
	@ResponseWrapper(localName = "findAllWithoutParameterResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.FindAllWithoutParameterResponse")
	public java.util.List<com.fis.esme.persistence.EsmeScheduler> findAllWithoutParameter() throws Exception_Exception;

	@RequestWrapper(localName = "delete", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.Delete")
	@WebMethod
	@ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.DeleteResponse")
	public void delete(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeScheduler arg0) throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "add", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.Add")
	@WebMethod
	@ResponseWrapper(localName = "addResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.AddResponse")
	public java.lang.Long add(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeScheduler arg0) throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "checkConstraints", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.CheckConstraints")
	@WebMethod
	@ResponseWrapper(localName = "checkConstraintsResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.CheckConstraintsResponse")
	public boolean checkConstraints(@WebParam(name = "arg0", targetNamespace = "") java.lang.Long arg0);

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findAllWithOrderPaging", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.FindAllWithOrderPaging")
	@WebMethod
	@ResponseWrapper(localName = "findAllWithOrderPagingResponse", targetNamespace = "http://scheduler.esme.fis.com/", className = "com.fis.esme.scheduler.FindAllWithOrderPagingResponse")
	public java.util.List<com.fis.esme.persistence.EsmeScheduler> findAllWithOrderPaging(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeScheduler arg0,
	        @WebParam(name = "arg1", targetNamespace = "") java.lang.String arg1, @WebParam(name = "arg2", targetNamespace = "") boolean arg2, @WebParam(name = "arg3", targetNamespace = "") int arg3,
	        @WebParam(name = "arg4", targetNamespace = "") int arg4, @WebParam(name = "arg5", targetNamespace = "") boolean arg5) throws Exception_Exception;
}

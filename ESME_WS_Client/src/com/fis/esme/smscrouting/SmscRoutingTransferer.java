package com.fis.esme.smscrouting;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1 2013-12-11T17:17:39.955+07:00
 * Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://smscrouting.esme.fis.com/", name = "SmscRoutingTransferer")
@XmlSeeAlso({ ObjectFactory.class })
public interface SmscRoutingTransferer {

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "checkExisted", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.CheckExisted")
	@WebMethod
	@ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.CheckExistedResponse")
	public int checkExisted(
			@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeSmscRouting arg0);

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findAllWithoutParameter", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.FindAllWithoutParameter")
	@WebMethod
	@ResponseWrapper(localName = "findAllWithoutParameterResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.FindAllWithoutParameterResponse")
	public java.util.List<com.fis.esme.persistence.EsmeSmscRouting> findAllWithoutParameter()
			throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "add", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.Add")
	@WebMethod
	@ResponseWrapper(localName = "addResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.AddResponse")
	public java.lang.Long add(
			@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeSmscRouting arg0)
			throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "count", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.Count")
	@WebMethod
	@ResponseWrapper(localName = "countResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.CountResponse")
	public int count(
			@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.SearchEntity arg0,
			@WebParam(name = "arg1", targetNamespace = "") com.fis.esme.persistence.EsmeSmscRouting arg1,
			@WebParam(name = "arg2", targetNamespace = "") boolean arg2);

	@RequestWrapper(localName = "delete", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.Delete")
	@WebMethod
	@ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.DeleteResponse")
	public void delete(
			@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeSmscRouting arg0)
			throws Exception_Exception;

	@RequestWrapper(localName = "update", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.Update")
	@WebMethod
	@ResponseWrapper(localName = "updateResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.UpdateResponse")
	public void update(
			@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.EsmeSmscRouting arg0)
			throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "checkConstraints", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.CheckConstraints")
	@WebMethod
	@ResponseWrapper(localName = "checkConstraintsResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.CheckConstraintsResponse")
	public boolean checkConstraints(
			@WebParam(name = "arg0", targetNamespace = "") java.lang.Long arg0);

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findAllWithOrderPaging", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.FindAllWithOrderPaging")
	@WebMethod
	@ResponseWrapper(localName = "findAllWithOrderPagingResponse", targetNamespace = "http://smscrouting.esme.fis.com/", className = "com.fis.esme.smscrouting.FindAllWithOrderPagingResponse")
	public java.util.List<com.fis.esme.persistence.EsmeSmscRouting> findAllWithOrderPaging(
			@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.SearchEntity arg0,
			@WebParam(name = "arg1", targetNamespace = "") com.fis.esme.persistence.EsmeSmscRouting arg1,
			@WebParam(name = "arg2", targetNamespace = "") java.lang.String arg2,
			@WebParam(name = "arg3", targetNamespace = "") boolean arg3,
			@WebParam(name = "arg4", targetNamespace = "") int arg4,
			@WebParam(name = "arg5", targetNamespace = "") int arg5,
			@WebParam(name = "arg6", targetNamespace = "") boolean arg6)
			throws Exception_Exception;
}

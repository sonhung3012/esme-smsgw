package com.fis.esme.apparam;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.4.1
 * 2013-11-28T16:28:00.527+07:00
 * Generated source version: 2.4.1
 * 
 */
@WebServiceClient(name = "ApParamTransfererService", 
                  wsdlLocation = "http://localhost:7080/ESME_Business/services/ApParamTransfererPort?wsdl",
                  targetNamespace = "http://apparam.esme.fis.com/") 
public class ApParamTransfererService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://apparam.esme.fis.com/", "ApParamTransfererService");
    public final static QName ApParamTransfererPort = new QName("http://apparam.esme.fis.com/", "ApParamTransfererPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:7080/ESME_Business/services/ApParamTransfererPort?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ApParamTransfererService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://localhost:7080/ESME_Business/services/ApParamTransfererPort?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ApParamTransfererService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ApParamTransfererService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ApParamTransfererService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns ApParamTransferer
     */
    @WebEndpoint(name = "ApParamTransfererPort")
    public ApParamTransferer getApParamTransfererPort() {
        return super.getPort(ApParamTransfererPort, ApParamTransferer.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ApParamTransferer
     */
    @WebEndpoint(name = "ApParamTransfererPort")
    public ApParamTransferer getApParamTransfererPort(WebServiceFeature... features) {
        return super.getPort(ApParamTransfererPort, ApParamTransferer.class, features);
    }

}

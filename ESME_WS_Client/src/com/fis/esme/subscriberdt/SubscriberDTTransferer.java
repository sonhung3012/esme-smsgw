package com.fis.esme.subscriberdt;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;

/**
 * This class was generated by Apache CXF 2.4.1 2014-10-16T17:13:06.346+07:00 Generated source version: 2.4.1
 * 
 */
@WebService(targetNamespace = "http://subscriberdt.esme.fis.com/", name = "SubscriberDTTransferer")
@XmlSeeAlso({ ObjectFactory.class })
public interface SubscriberDTTransferer {

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findSubcribersByGroup", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindSubcribersByGroup")
	@WebMethod
	@ResponseWrapper(localName = "findSubcribersByGroupResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindSubcribersByGroupResponse")
	public java.util.List<com.fis.esme.persistence.Subscriber> findSubcribersByGroup(@WebParam(name = "arg0", targetNamespace = "") long arg0) throws Exception_Exception;

	@RequestWrapper(localName = "update", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.Update")
	@WebMethod
	@ResponseWrapper(localName = "updateResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.UpdateResponse")
	public void update(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.Subscriber arg0, @WebParam(name = "arg1", targetNamespace = "") long arg1) throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "count", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.Count")
	@WebMethod
	@ResponseWrapper(localName = "countResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.CountResponse")
	public int count(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.SearchEntity arg0,
	        @WebParam(name = "arg1", targetNamespace = "") com.fis.esme.persistence.Subscriber arg1, @WebParam(name = "arg2", targetNamespace = "") boolean arg2);

	@RequestWrapper(localName = "SubscriberDTTransferer", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.SubscriberDTTransferer_Type")
	@WebMethod(operationName = "SubscriberDTTransferer")
	@ResponseWrapper(localName = "SubscriberDTTransfererResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.SubscriberDTTransfererResponse")
	public void subscriberDTTransferer();

	@RequestWrapper(localName = "delete", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.Delete")
	@WebMethod
	@ResponseWrapper(localName = "deleteResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.DeleteResponse")
	public void delete(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.Subscriber arg0, @WebParam(name = "arg1", targetNamespace = "") long arg1) throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "checkExisted", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.CheckExisted")
	@WebMethod
	@ResponseWrapper(localName = "checkExistedResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.CheckExistedResponse")
	public int checkExisted(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.Subscriber arg0);

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "add", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.Add")
	@WebMethod
	@ResponseWrapper(localName = "addResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.AddResponse")
	public java.lang.Long add(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.Subscriber arg0, @WebParam(name = "arg1", targetNamespace = "") long arg1)
	        throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findAllWithOrderPaging", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindAllWithOrderPaging")
	@WebMethod
	@ResponseWrapper(localName = "findAllWithOrderPagingResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindAllWithOrderPagingResponse")
	public java.util.List<com.fis.esme.persistence.Subscriber> findAllWithOrderPaging(@WebParam(name = "arg0", targetNamespace = "") com.fis.esme.persistence.SearchEntity arg0,
	        @WebParam(name = "arg1", targetNamespace = "") com.fis.esme.persistence.Subscriber arg1, @WebParam(name = "arg2", targetNamespace = "") java.lang.String arg2,
	        @WebParam(name = "arg3", targetNamespace = "") boolean arg3, @WebParam(name = "arg4", targetNamespace = "") int arg4, @WebParam(name = "arg5", targetNamespace = "") int arg5,
	        @WebParam(name = "arg6", targetNamespace = "") boolean arg6) throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findAllWithoutParameter", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindAllWithoutParameter")
	@WebMethod
	@ResponseWrapper(localName = "findAllWithoutParameterResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindAllWithoutParameterResponse")
	public java.util.List<com.fis.esme.persistence.Subscriber> findAllWithoutParameter() throws Exception_Exception;

	@WebResult(name = "return", targetNamespace = "")
	@RequestWrapper(localName = "findGroupsBySub", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindGroupsBySub")
	@WebMethod
	@ResponseWrapper(localName = "findGroupsBySubResponse", targetNamespace = "http://subscriberdt.esme.fis.com/", className = "com.fis.esme.subscriberdt.FindGroupsBySubResponse")
	public java.util.List<com.fis.esme.persistence.Groups> findGroupsBySub(@WebParam(name = "arg0", targetNamespace = "") long arg0) throws Exception_Exception;
}

package com.fis.esme.bo.impl;

import java.util.List;

import com.fis.esme.bo.EsmeSmsMtBo;
import com.fis.esme.dao.EsmeSmsMtDao;
import com.fis.esme.persistence.EsmeCp;
import com.fis.esme.persistence.EsmeShortCode;
import com.fis.esme.persistence.EsmeSmsCommand;
import com.fis.esme.persistence.EsmeSmsMt;
import com.fis.esme.persistence.EsmeSmsRouting;
import com.fis.framework.bo.GenericBoImp;

// Generated Apr 26, 2011 6:00:02 PM by Hibernate Tools 3.2.4.GA

/**
 * AccessNumber generated by hbm2java
 */
public class EsmeSmsMtBoImpl extends
		GenericBoImp<EsmeSmsMt, Long, EsmeSmsMtDao> implements EsmeSmsMtBo {

	@Override
	public int checkExited(EsmeSmsMt prcService) throws Exception {
		return getDaoInternal().checkExited(prcService);
	}

	@Override
	public boolean checkConstraints(Long id) throws Exception {
		return getDaoInternal().checkConstraints(id);
	}

	@Override
	public List<EsmeSmsMt> findAll(EsmeSmsMt prcService) throws Exception {
		return getDaoInternal().findAll(prcService);
	}

	@Override
	public List<EsmeSmsMt> findAll(EsmeSmsMt prcService, int firstItemIndex,
			int maxItems) throws Exception {
		return getDaoInternal().findAll(prcService, firstItemIndex, maxItems);
	}

	@Override
	public List<EsmeSmsMt> findAll(EsmeSmsMt prcService, boolean exactMatch)
			throws Exception {
		return getDaoInternal().findAll(prcService, exactMatch);
	}

	@Override
	public List<EsmeSmsMt> findAll(EsmeSmsMt prcService, int firstItemIndex,
			int maxItems, boolean exactMatch) throws Exception {
		return getDaoInternal().findAll(prcService, firstItemIndex, maxItems,
				exactMatch);
	}

	@Override
	public List<EsmeSmsMt> findAll(EsmeSmsMt prcService, String sortedColumn,
			boolean ascSorted, int firstItemIndex, int maxItems,
			boolean exactMatch) throws Exception {
		return getDaoInternal().findAll(prcService, sortedColumn, ascSorted,
				firstItemIndex, maxItems, exactMatch);
	}

	@Override
	public int countAll() throws Exception {
		return getDaoInternal().countAll();
	}

	@Override
	public int count(EsmeSmsMt prcService, boolean exactMatch) throws Exception {
		return getDaoInternal().count(prcService, exactMatch);
	}

	@Override
	public List<EsmeSmsRouting> FindBySmsRouting(EsmeSmsRouting esmeSmsRouting)
			throws Exception {
		
		return getDaoInternal().FindBySmsRouting(esmeSmsRouting);
	}

	@Override
	public List<EsmeCp> findByCP(String id) throws Exception {
		
		return getDaoInternal().findByCP(id);
	}

	@Override
	public List<EsmeSmsCommand> findByCommand(String id) throws Exception {
		
		return getDaoInternal().findByCommand(id);
	}

	@Override
	public List<EsmeShortCode> findByShortCode(String id) throws Exception {
		
		return getDaoInternal().findByShortCode(id);
	}

	@Override
	public void deleteByFileUploadId(long fileUploadId) throws Exception {
		
		getDaoInternal().deleteByFileUploadId(fileUploadId);
	}

	@Override
	public long addMultiProcess(List<EsmeSmsMt> esmeSmsMt) throws Exception {
		
		return getDaoInternal().addMultiProcess(esmeSmsMt);
	}

	@Override
	public void stopUpload() throws Exception {
		
		getDaoInternal().stopUpload();
	}

}

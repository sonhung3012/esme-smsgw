package com.fis.esme.bo.impl;

import java.util.List;

import com.fis.esme.bo.EsmeIsdnSpecialBo;
import com.fis.esme.dao.EsmeIsdnSpecialDao;
import com.fis.esme.persistence.EsmeIsdnPermission;
import com.fis.esme.persistence.EsmeIsdnSpecial;
import com.fis.esme.utils.SearchEntity;
import com.fis.framework.bo.GenericBoImp;

// Generated Apr 26, 2011 6:00:02 PM by Hibernate Tools 3.2.4.GA

/**
 * AccessNumber generated by hbm2java
 */
public class EsmeIsdnSpecialBoImpl extends
		GenericBoImp<EsmeIsdnSpecial, String, EsmeIsdnSpecialDao> implements
		EsmeIsdnSpecialBo {

	@Override
	public List<EsmeIsdnSpecial> findAll(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial) throws Exception {
		return getDaoInternal().findAll(searchEntity, esmeIsdnSpecial);
	}

	@Override
	public List<EsmeIsdnSpecial> findAll(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial, int firstItemIndex, int maxItems)
			throws Exception {
		return getDaoInternal().findAll(searchEntity, esmeIsdnSpecial,
				firstItemIndex, maxItems);
	}

	@Override
	public List<EsmeIsdnSpecial> findAll(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial, boolean exactMatch)
			throws Exception {
		return getDaoInternal().findAll(searchEntity, esmeIsdnSpecial,
				exactMatch);
	}

	@Override
	public List<EsmeIsdnSpecial> findAll(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial, int firstItemIndex, int maxItems,
			boolean exactMatch) throws Exception {
		return getDaoInternal().findAll(searchEntity, esmeIsdnSpecial,
				firstItemIndex, maxItems, exactMatch);
	}

	@Override
	public List<EsmeIsdnSpecial> findAll(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial, String sortedColumn,
			boolean ascSorted, int firstItemIndex, int maxItems,
			boolean exactMatch) throws Exception {
		return getDaoInternal().findAll(searchEntity, esmeIsdnSpecial,
				sortedColumn, ascSorted, firstItemIndex, maxItems, exactMatch);
	}

	@Override
	public int count(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial, boolean exactMatch)
			throws Exception {
		return getDaoInternal()
				.count(searchEntity, esmeIsdnSpecial, exactMatch);
	}

	@Override
	public int checkExited(SearchEntity searchEntity,
			EsmeIsdnSpecial esmeIsdnSpecial) throws Exception {
		return getDaoInternal().checkExited(searchEntity, esmeIsdnSpecial);
	}

	@Override
	public int countAll() throws Exception {
		return getDaoInternal().countAll();
	}

	@Override
	public boolean checkConstraints(String id) throws Exception {
		return getDaoInternal().checkConstraints(id);
	}

	@Override
	public List<EsmeIsdnPermission> getPermissionByMisdn(String msisdn)
			throws Exception {
		
		return getDaoInternal().getPermissionByMisdn(msisdn);
	}

	@Override
	public void deletePermissionByMsisdn(String msisdn) throws Exception {
		
		getDaoInternal().deletePermissionByMsisdn(msisdn);
	}

	@Override
	public void updateSpecial(EsmeIsdnSpecial esmeIsdnSpecial, String oldMsisdn)
			throws Exception {
		
		getDaoInternal().updateSpecial(esmeIsdnSpecial, oldMsisdn);
	}

}

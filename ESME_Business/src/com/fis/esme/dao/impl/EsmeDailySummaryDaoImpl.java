package com.fis.esme.dao.impl;

import java.util.Date;
import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.criterion.Expression;
import org.hibernate.criterion.Order;
import org.hibernate.criterion.ProjectionList;
import org.hibernate.criterion.Projections;
import org.hibernate.criterion.Restrictions;

import com.fis.framework.dao.hibernate.GenericDaoSpringHibernateTemplate;
import com.fis.esme.dao.EsmeDailySummaryDao;
import com.fis.esme.persistence.EsmeDailySummary;

// Generated Apr 26, 2011 6:00:02 PM by Hibernate Tools 3.2.4.GA

/**
 * AccessNumber generated by hbm2java
 */
public class EsmeDailySummaryDaoImpl extends
		GenericDaoSpringHibernateTemplate<EsmeDailySummary, Date> implements
		EsmeDailySummaryDao

{

	@Override
	public List<EsmeDailySummary> findAllByDate(Date fromDate, Date toDate)
			throws Exception {
		
		Criteria criteria = getSession().createCriteria(EsmeDailySummary.class);
		criteria.add(Restrictions.between("summaryDate", fromDate, toDate));
		criteria.addOrder(Order.asc("summaryDate"));
		List<EsmeDailySummary> list = criteria.list();
		return list;
	}

	@Override
	public List<EsmeDailySummary> findAllByDateByListField(List<String> fields,
			Date fromDate, Date toDate) throws Exception {
		
		Criteria criteria = getSession().createCriteria(EsmeDailySummary.class);
		ProjectionList projectionList = Projections.projectionList();
		for (String string : fields) {
			projectionList.add(Projections.property(string));
		}
		criteria.setProjection(projectionList);
		criteria.add(Restrictions.between("summaryDate", fromDate, toDate));
		criteria.addOrder(Order.asc("summaryDate"));
		List<EsmeDailySummary> list = criteria.list();
		return list;
	}

	@Override
	public List<EsmeDailySummary> findAllInDateByField(String field, Date fromDate,
			Date toDate) throws Exception {
		
		Criteria criteria = getSession().createCriteria(EsmeDailySummary.class);
		criteria.add(Expression.between(field, fromDate, toDate));
		return criteria.list();
	}

	

}
